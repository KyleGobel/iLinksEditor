#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iLinks.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Jetnett_Data")]
	public partial class iLinksDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertCommunityProfile(CommunityProfile instance);
    partial void UpdateCommunityProfile(CommunityProfile instance);
    partial void DeleteCommunityProfile(CommunityProfile instance);
    partial void InsertFolder(Folder instance);
    partial void UpdateFolder(Folder instance);
    partial void DeleteFolder(Folder instance);
    partial void InsertLink(Link instance);
    partial void UpdateLink(Link instance);
    partial void DeleteLink(Link instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertMetro_iLink(Metro_iLink instance);
    partial void UpdateMetro_iLink(Metro_iLink instance);
    partial void DeleteMetro_iLink(Metro_iLink instance);
    #endregion
		
		public iLinksDataContext() : 
				base(global::iLinks.Data.Properties.Settings.Default.Jetnett_DataConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public iLinksDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iLinksDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iLinksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iLinksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<CommunityProfile> CommunityProfiles
		{
			get
			{
				return this.GetTable<CommunityProfile>();
			}
		}
		
		public System.Data.Linq.Table<Folder> Folders
		{
			get
			{
				return this.GetTable<Folder>();
			}
		}
		
		public System.Data.Linq.Table<Link> Links
		{
			get
			{
				return this.GetTable<Link>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<Metro_iLink> Metro_iLinks
		{
			get
			{
				return this.GetTable<Metro_iLink>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _User_ID;
		
		private string _Password;
		
		private string _Website;
		
		private string _Display_Name;
		
		private string _Email;
		
		private string _CSS;
		
		private string _Analytics_Key;
		
		private EntitySet<CommunityProfile> _CommunityProfiles;
		
		private EntitySet<Metro_iLink> _Metro_iLinks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUser_IDChanging(string value);
    partial void OnUser_IDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnDisplay_NameChanging(string value);
    partial void OnDisplay_NameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCSSChanging(string value);
    partial void OnCSSChanged();
    partial void OnAnalytics_KeyChanging(string value);
    partial void OnAnalytics_KeyChanged();
    #endregion
		
		public Client()
		{
			this._CommunityProfiles = new EntitySet<CommunityProfile>(new Action<CommunityProfile>(this.attach_CommunityProfiles), new Action<CommunityProfile>(this.detach_CommunityProfiles));
			this._Metro_iLinks = new EntitySet<Metro_iLink>(new Action<Metro_iLink>(this.attach_Metro_iLinks), new Action<Metro_iLink>(this.detach_Metro_iLinks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(255)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display_Name", DbType="VarChar(50)")]
		public string Display_Name
		{
			get
			{
				return this._Display_Name;
			}
			set
			{
				if ((this._Display_Name != value))
				{
					this.OnDisplay_NameChanging(value);
					this.SendPropertyChanging();
					this._Display_Name = value;
					this.SendPropertyChanged("Display_Name");
					this.OnDisplay_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSS", DbType="VarChar(255)")]
		public string CSS
		{
			get
			{
				return this._CSS;
			}
			set
			{
				if ((this._CSS != value))
				{
					this.OnCSSChanging(value);
					this.SendPropertyChanging();
					this._CSS = value;
					this.SendPropertyChanged("CSS");
					this.OnCSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Analytics_Key", DbType="VarChar(112)")]
		public string Analytics_Key
		{
			get
			{
				return this._Analytics_Key;
			}
			set
			{
				if ((this._Analytics_Key != value))
				{
					this.OnAnalytics_KeyChanging(value);
					this.SendPropertyChanging();
					this._Analytics_Key = value;
					this.SendPropertyChanged("Analytics_Key");
					this.OnAnalytics_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_CommunityProfile", Storage="_CommunityProfiles", ThisKey="ID", OtherKey="ClientId")]
		public EntitySet<CommunityProfile> CommunityProfiles
		{
			get
			{
				return this._CommunityProfiles;
			}
			set
			{
				this._CommunityProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Metro_iLink", Storage="_Metro_iLinks", ThisKey="ID", OtherKey="Client_ID")]
		public EntitySet<Metro_iLink> Metro_iLinks
		{
			get
			{
				return this._Metro_iLinks;
			}
			set
			{
				this._Metro_iLinks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommunityProfiles(CommunityProfile entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_CommunityProfiles(CommunityProfile entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Metro_iLinks(Metro_iLink entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Metro_iLinks(Metro_iLink entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommunityProfiles")]
	public partial class CommunityProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientId;
		
		private int _PageId;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Page> _Page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    #endregion
		
		public CommunityProfile()
		{
			this._Client = default(EntityRef<Client>);
			this._Page = default(EntityRef<Page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_CommunityProfile", Storage="_Client", ThisKey="ClientId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.CommunityProfiles.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.CommunityProfiles.Add(this);
						this._ClientId = value.ID;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_CommunityProfile", Storage="_Page", ThisKey="PageId", OtherKey="ID", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.CommunityProfiles.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.CommunityProfiles.Add(this);
						this._PageId = value.ID;
					}
					else
					{
						this._PageId = default(int);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Folders")]
	public partial class Folder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Parent_Folder_ID;
		
		private EntitySet<Folder> _Folders;
		
		private EntitySet<Page> _Pages;
		
		private EntityRef<Folder> _Folder1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParent_Folder_IDChanging(System.Nullable<int> value);
    partial void OnParent_Folder_IDChanged();
    #endregion
		
		public Folder()
		{
			this._Folders = new EntitySet<Folder>(new Action<Folder>(this.attach_Folders), new Action<Folder>(this.detach_Folders));
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._Folder1 = default(EntityRef<Folder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_Folder_ID", DbType="Int")]
		public System.Nullable<int> Parent_Folder_ID
		{
			get
			{
				return this._Parent_Folder_ID;
			}
			set
			{
				if ((this._Parent_Folder_ID != value))
				{
					if (this._Folder1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParent_Folder_IDChanging(value);
					this.SendPropertyChanging();
					this._Parent_Folder_ID = value;
					this.SendPropertyChanged("Parent_Folder_ID");
					this.OnParent_Folder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Folder", Storage="_Folders", ThisKey="ID", OtherKey="Parent_Folder_ID")]
		public EntitySet<Folder> Folders
		{
			get
			{
				return this._Folders;
			}
			set
			{
				this._Folders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Page", Storage="_Pages", ThisKey="ID", OtherKey="Folder_ID")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Folder", Storage="_Folder1", ThisKey="Parent_Folder_ID", OtherKey="ID", IsForeignKey=true)]
		public Folder Folder1
		{
			get
			{
				return this._Folder1.Entity;
			}
			set
			{
				Folder previousValue = this._Folder1.Entity;
				if (((previousValue != value) 
							|| (this._Folder1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Folder1.Entity = null;
						previousValue.Folders.Remove(this);
					}
					this._Folder1.Entity = value;
					if ((value != null))
					{
						value.Folders.Add(this);
						this._Parent_Folder_ID = value.ID;
					}
					else
					{
						this._Parent_Folder_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Folder1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Folders(Folder entity)
		{
			this.SendPropertyChanging();
			entity.Folder1 = this;
		}
		
		private void detach_Folders(Folder entity)
		{
			this.SendPropertyChanging();
			entity.Folder1 = null;
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Folder = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Folder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Links")]
	public partial class Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Page_ID;
		
		private int _Position;
		
		private bool _Is_Link;
		
		private string _Title;
		
		private string _URL;
		
		private string _Target;
		
		private EntityRef<Page> _Page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPage_IDChanging(int value);
    partial void OnPage_IDChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnIs_LinkChanging(bool value);
    partial void OnIs_LinkChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    #endregion
		
		public Link()
		{
			this._Page = default(EntityRef<Page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_ID", DbType="Int NOT NULL")]
		public int Page_ID
		{
			get
			{
				return this._Page_ID;
			}
			set
			{
				if ((this._Page_ID != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPage_IDChanging(value);
					this.SendPropertyChanging();
					this._Page_ID = value;
					this.SendPropertyChanged("Page_ID");
					this.OnPage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Link", DbType="Bit NOT NULL")]
		public bool Is_Link
		{
			get
			{
				return this._Is_Link;
			}
			set
			{
				if ((this._Is_Link != value))
				{
					this.OnIs_LinkChanging(value);
					this.SendPropertyChanging();
					this._Is_Link = value;
					this.SendPropertyChanged("Is_Link");
					this.OnIs_LinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(512)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="VarChar(50)")]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Link", Storage="_Page", ThisKey="Page_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.Links.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.Links.Add(this);
						this._Page_ID = value.ID;
					}
					else
					{
						this._Page_ID = default(int);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Folder_ID;
		
		private string _Title;
		
		private System.Nullable<bool> _Auto_Ordering;
		
		private string _Footer_HTML;
		
		private string _MetaKeys;
		
		private string _MetaDesc;
		
		private string _Canonical_URL;
		
		private string _Extra_HTML;
		
		private string _Route;
		
		private EntitySet<CommunityProfile> _CommunityProfiles;
		
		private EntitySet<Link> _Links;
		
		private EntityRef<Folder> _Folder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFolder_IDChanging(int value);
    partial void OnFolder_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAuto_OrderingChanging(System.Nullable<bool> value);
    partial void OnAuto_OrderingChanged();
    partial void OnFooter_HTMLChanging(string value);
    partial void OnFooter_HTMLChanged();
    partial void OnMetaKeysChanging(string value);
    partial void OnMetaKeysChanged();
    partial void OnMetaDescChanging(string value);
    partial void OnMetaDescChanged();
    partial void OnCanonical_URLChanging(string value);
    partial void OnCanonical_URLChanged();
    partial void OnExtra_HTMLChanging(string value);
    partial void OnExtra_HTMLChanged();
    partial void OnRouteChanging(string value);
    partial void OnRouteChanged();
    #endregion
		
		public Page()
		{
			this._CommunityProfiles = new EntitySet<CommunityProfile>(new Action<CommunityProfile>(this.attach_CommunityProfiles), new Action<CommunityProfile>(this.detach_CommunityProfiles));
			this._Links = new EntitySet<Link>(new Action<Link>(this.attach_Links), new Action<Link>(this.detach_Links));
			this._Folder = default(EntityRef<Folder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folder_ID", DbType="Int NOT NULL")]
		public int Folder_ID
		{
			get
			{
				return this._Folder_ID;
			}
			set
			{
				if ((this._Folder_ID != value))
				{
					if (this._Folder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFolder_IDChanging(value);
					this.SendPropertyChanging();
					this._Folder_ID = value;
					this.SendPropertyChanged("Folder_ID");
					this.OnFolder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(256)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auto_Ordering", DbType="Bit")]
		public System.Nullable<bool> Auto_Ordering
		{
			get
			{
				return this._Auto_Ordering;
			}
			set
			{
				if ((this._Auto_Ordering != value))
				{
					this.OnAuto_OrderingChanging(value);
					this.SendPropertyChanging();
					this._Auto_Ordering = value;
					this.SendPropertyChanged("Auto_Ordering");
					this.OnAuto_OrderingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Footer_HTML", DbType="VarChar(MAX)")]
		public string Footer_HTML
		{
			get
			{
				return this._Footer_HTML;
			}
			set
			{
				if ((this._Footer_HTML != value))
				{
					this.OnFooter_HTMLChanging(value);
					this.SendPropertyChanging();
					this._Footer_HTML = value;
					this.SendPropertyChanged("Footer_HTML");
					this.OnFooter_HTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeys", DbType="VarChar(256)")]
		public string MetaKeys
		{
			get
			{
				return this._MetaKeys;
			}
			set
			{
				if ((this._MetaKeys != value))
				{
					this.OnMetaKeysChanging(value);
					this.SendPropertyChanging();
					this._MetaKeys = value;
					this.SendPropertyChanged("MetaKeys");
					this.OnMetaKeysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDesc", DbType="VarChar(256)")]
		public string MetaDesc
		{
			get
			{
				return this._MetaDesc;
			}
			set
			{
				if ((this._MetaDesc != value))
				{
					this.OnMetaDescChanging(value);
					this.SendPropertyChanging();
					this._MetaDesc = value;
					this.SendPropertyChanged("MetaDesc");
					this.OnMetaDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Canonical_URL", DbType="VarChar(MAX)")]
		public string Canonical_URL
		{
			get
			{
				return this._Canonical_URL;
			}
			set
			{
				if ((this._Canonical_URL != value))
				{
					this.OnCanonical_URLChanging(value);
					this.SendPropertyChanging();
					this._Canonical_URL = value;
					this.SendPropertyChanged("Canonical_URL");
					this.OnCanonical_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extra_HTML", DbType="VarChar(MAX)")]
		public string Extra_HTML
		{
			get
			{
				return this._Extra_HTML;
			}
			set
			{
				if ((this._Extra_HTML != value))
				{
					this.OnExtra_HTMLChanging(value);
					this.SendPropertyChanging();
					this._Extra_HTML = value;
					this.SendPropertyChanged("Extra_HTML");
					this.OnExtra_HTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="VarChar(128)")]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this.OnRouteChanging(value);
					this.SendPropertyChanging();
					this._Route = value;
					this.SendPropertyChanged("Route");
					this.OnRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_CommunityProfile", Storage="_CommunityProfiles", ThisKey="ID", OtherKey="PageId")]
		public EntitySet<CommunityProfile> CommunityProfiles
		{
			get
			{
				return this._CommunityProfiles;
			}
			set
			{
				this._CommunityProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Link", Storage="_Links", ThisKey="ID", OtherKey="Page_ID")]
		public EntitySet<Link> Links
		{
			get
			{
				return this._Links;
			}
			set
			{
				this._Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Folder_Page", Storage="_Folder", ThisKey="Folder_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Folder Folder
		{
			get
			{
				return this._Folder.Entity;
			}
			set
			{
				Folder previousValue = this._Folder.Entity;
				if (((previousValue != value) 
							|| (this._Folder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Folder.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._Folder.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._Folder_ID = value.ID;
					}
					else
					{
						this._Folder_ID = default(int);
					}
					this.SendPropertyChanged("Folder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommunityProfiles(CommunityProfile entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_CommunityProfiles(CommunityProfile entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
		
		private void attach_Links(Link entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_Links(Link entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Metro_iLinks")]
	public partial class Metro_iLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Client_ID;
		
		private string _PageBGColor;
		
		private string _PageTextColor;
		
		private string _PageLinkColor;
		
		private string _HomeSearchText;
		
		private string _HomeSearchURL;
		
		private string _OriginationPage;
		
		private string _BackLinkTitle;
		
		private string _BackLinkURL;
		
		private string _BackLinkTarget;
		
		private string _DropDownPageIDs;
		
		private string _ClientLogoGraphicLocation;
		
		private string _ClientLogoLinkURL;
		
		private string _ClientLogoTargetWindow;
		
		private string _ClientLogoAltText;
		
		private string _ProductLogoGraphicLocation;
		
		private string _ProductLogoLinkURL;
		
		private string _ProductLogoTargetWindow;
		
		private string _ProductLogoAltText;
		
		private string _OriginationPageTarget;
		
		private string _SEOMetaKeys;
		
		private string _SEOMetaDesc;
		
		private System.Nullable<int> _FontSizePx;
		
		private string _HomeSearchLabelText;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClient_IDChanging(int value);
    partial void OnClient_IDChanged();
    partial void OnPageBGColorChanging(string value);
    partial void OnPageBGColorChanged();
    partial void OnPageTextColorChanging(string value);
    partial void OnPageTextColorChanged();
    partial void OnPageLinkColorChanging(string value);
    partial void OnPageLinkColorChanged();
    partial void OnHomeSearchTextChanging(string value);
    partial void OnHomeSearchTextChanged();
    partial void OnHomeSearchURLChanging(string value);
    partial void OnHomeSearchURLChanged();
    partial void OnOriginationPageChanging(string value);
    partial void OnOriginationPageChanged();
    partial void OnBackLinkTitleChanging(string value);
    partial void OnBackLinkTitleChanged();
    partial void OnBackLinkURLChanging(string value);
    partial void OnBackLinkURLChanged();
    partial void OnBackLinkTargetChanging(string value);
    partial void OnBackLinkTargetChanged();
    partial void OnDropDownPageIDsChanging(string value);
    partial void OnDropDownPageIDsChanged();
    partial void OnClientLogoGraphicLocationChanging(string value);
    partial void OnClientLogoGraphicLocationChanged();
    partial void OnClientLogoLinkURLChanging(string value);
    partial void OnClientLogoLinkURLChanged();
    partial void OnClientLogoTargetWindowChanging(string value);
    partial void OnClientLogoTargetWindowChanged();
    partial void OnClientLogoAltTextChanging(string value);
    partial void OnClientLogoAltTextChanged();
    partial void OnProductLogoGraphicLocationChanging(string value);
    partial void OnProductLogoGraphicLocationChanged();
    partial void OnProductLogoLinkURLChanging(string value);
    partial void OnProductLogoLinkURLChanged();
    partial void OnProductLogoTargetWindowChanging(string value);
    partial void OnProductLogoTargetWindowChanged();
    partial void OnProductLogoAltTextChanging(string value);
    partial void OnProductLogoAltTextChanged();
    partial void OnOriginationPageTargetChanging(string value);
    partial void OnOriginationPageTargetChanged();
    partial void OnSEOMetaKeysChanging(string value);
    partial void OnSEOMetaKeysChanged();
    partial void OnSEOMetaDescChanging(string value);
    partial void OnSEOMetaDescChanged();
    partial void OnFontSizePxChanging(System.Nullable<int> value);
    partial void OnFontSizePxChanged();
    partial void OnHomeSearchLabelTextChanging(string value);
    partial void OnHomeSearchLabelTextChanged();
    #endregion
		
		public Metro_iLink()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client_ID", DbType="Int NOT NULL")]
		public int Client_ID
		{
			get
			{
				return this._Client_ID;
			}
			set
			{
				if ((this._Client_ID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClient_IDChanging(value);
					this.SendPropertyChanging();
					this._Client_ID = value;
					this.SendPropertyChanged("Client_ID");
					this.OnClient_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageBGColor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PageBGColor
		{
			get
			{
				return this._PageBGColor;
			}
			set
			{
				if ((this._PageBGColor != value))
				{
					this.OnPageBGColorChanging(value);
					this.SendPropertyChanging();
					this._PageBGColor = value;
					this.SendPropertyChanged("PageBGColor");
					this.OnPageBGColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTextColor", DbType="VarChar(50)")]
		public string PageTextColor
		{
			get
			{
				return this._PageTextColor;
			}
			set
			{
				if ((this._PageTextColor != value))
				{
					this.OnPageTextColorChanging(value);
					this.SendPropertyChanging();
					this._PageTextColor = value;
					this.SendPropertyChanged("PageTextColor");
					this.OnPageTextColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageLinkColor", DbType="VarChar(50)")]
		public string PageLinkColor
		{
			get
			{
				return this._PageLinkColor;
			}
			set
			{
				if ((this._PageLinkColor != value))
				{
					this.OnPageLinkColorChanging(value);
					this.SendPropertyChanging();
					this._PageLinkColor = value;
					this.SendPropertyChanged("PageLinkColor");
					this.OnPageLinkColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSearchText", DbType="VarChar(50)")]
		public string HomeSearchText
		{
			get
			{
				return this._HomeSearchText;
			}
			set
			{
				if ((this._HomeSearchText != value))
				{
					this.OnHomeSearchTextChanging(value);
					this.SendPropertyChanging();
					this._HomeSearchText = value;
					this.SendPropertyChanged("HomeSearchText");
					this.OnHomeSearchTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSearchURL", DbType="VarChar(MAX)")]
		public string HomeSearchURL
		{
			get
			{
				return this._HomeSearchURL;
			}
			set
			{
				if ((this._HomeSearchURL != value))
				{
					this.OnHomeSearchURLChanging(value);
					this.SendPropertyChanging();
					this._HomeSearchURL = value;
					this.SendPropertyChanged("HomeSearchURL");
					this.OnHomeSearchURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginationPage", DbType="VarChar(MAX)")]
		public string OriginationPage
		{
			get
			{
				return this._OriginationPage;
			}
			set
			{
				if ((this._OriginationPage != value))
				{
					this.OnOriginationPageChanging(value);
					this.SendPropertyChanging();
					this._OriginationPage = value;
					this.SendPropertyChanged("OriginationPage");
					this.OnOriginationPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackLinkTitle", DbType="VarChar(50)")]
		public string BackLinkTitle
		{
			get
			{
				return this._BackLinkTitle;
			}
			set
			{
				if ((this._BackLinkTitle != value))
				{
					this.OnBackLinkTitleChanging(value);
					this.SendPropertyChanging();
					this._BackLinkTitle = value;
					this.SendPropertyChanged("BackLinkTitle");
					this.OnBackLinkTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackLinkURL", DbType="VarChar(MAX)")]
		public string BackLinkURL
		{
			get
			{
				return this._BackLinkURL;
			}
			set
			{
				if ((this._BackLinkURL != value))
				{
					this.OnBackLinkURLChanging(value);
					this.SendPropertyChanging();
					this._BackLinkURL = value;
					this.SendPropertyChanged("BackLinkURL");
					this.OnBackLinkURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackLinkTarget", DbType="VarChar(50)")]
		public string BackLinkTarget
		{
			get
			{
				return this._BackLinkTarget;
			}
			set
			{
				if ((this._BackLinkTarget != value))
				{
					this.OnBackLinkTargetChanging(value);
					this.SendPropertyChanging();
					this._BackLinkTarget = value;
					this.SendPropertyChanged("BackLinkTarget");
					this.OnBackLinkTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropDownPageIDs", DbType="VarChar(MAX)")]
		public string DropDownPageIDs
		{
			get
			{
				return this._DropDownPageIDs;
			}
			set
			{
				if ((this._DropDownPageIDs != value))
				{
					this.OnDropDownPageIDsChanging(value);
					this.SendPropertyChanging();
					this._DropDownPageIDs = value;
					this.SendPropertyChanged("DropDownPageIDs");
					this.OnDropDownPageIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientLogoGraphicLocation", DbType="VarChar(MAX)")]
		public string ClientLogoGraphicLocation
		{
			get
			{
				return this._ClientLogoGraphicLocation;
			}
			set
			{
				if ((this._ClientLogoGraphicLocation != value))
				{
					this.OnClientLogoGraphicLocationChanging(value);
					this.SendPropertyChanging();
					this._ClientLogoGraphicLocation = value;
					this.SendPropertyChanged("ClientLogoGraphicLocation");
					this.OnClientLogoGraphicLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientLogoLinkURL", DbType="VarChar(MAX)")]
		public string ClientLogoLinkURL
		{
			get
			{
				return this._ClientLogoLinkURL;
			}
			set
			{
				if ((this._ClientLogoLinkURL != value))
				{
					this.OnClientLogoLinkURLChanging(value);
					this.SendPropertyChanging();
					this._ClientLogoLinkURL = value;
					this.SendPropertyChanged("ClientLogoLinkURL");
					this.OnClientLogoLinkURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientLogoTargetWindow", DbType="VarChar(50)")]
		public string ClientLogoTargetWindow
		{
			get
			{
				return this._ClientLogoTargetWindow;
			}
			set
			{
				if ((this._ClientLogoTargetWindow != value))
				{
					this.OnClientLogoTargetWindowChanging(value);
					this.SendPropertyChanging();
					this._ClientLogoTargetWindow = value;
					this.SendPropertyChanged("ClientLogoTargetWindow");
					this.OnClientLogoTargetWindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientLogoAltText", DbType="VarChar(255)")]
		public string ClientLogoAltText
		{
			get
			{
				return this._ClientLogoAltText;
			}
			set
			{
				if ((this._ClientLogoAltText != value))
				{
					this.OnClientLogoAltTextChanging(value);
					this.SendPropertyChanging();
					this._ClientLogoAltText = value;
					this.SendPropertyChanged("ClientLogoAltText");
					this.OnClientLogoAltTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLogoGraphicLocation", DbType="VarChar(MAX)")]
		public string ProductLogoGraphicLocation
		{
			get
			{
				return this._ProductLogoGraphicLocation;
			}
			set
			{
				if ((this._ProductLogoGraphicLocation != value))
				{
					this.OnProductLogoGraphicLocationChanging(value);
					this.SendPropertyChanging();
					this._ProductLogoGraphicLocation = value;
					this.SendPropertyChanged("ProductLogoGraphicLocation");
					this.OnProductLogoGraphicLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLogoLinkURL", DbType="VarChar(MAX)")]
		public string ProductLogoLinkURL
		{
			get
			{
				return this._ProductLogoLinkURL;
			}
			set
			{
				if ((this._ProductLogoLinkURL != value))
				{
					this.OnProductLogoLinkURLChanging(value);
					this.SendPropertyChanging();
					this._ProductLogoLinkURL = value;
					this.SendPropertyChanged("ProductLogoLinkURL");
					this.OnProductLogoLinkURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLogoTargetWindow", DbType="VarChar(MAX)")]
		public string ProductLogoTargetWindow
		{
			get
			{
				return this._ProductLogoTargetWindow;
			}
			set
			{
				if ((this._ProductLogoTargetWindow != value))
				{
					this.OnProductLogoTargetWindowChanging(value);
					this.SendPropertyChanging();
					this._ProductLogoTargetWindow = value;
					this.SendPropertyChanged("ProductLogoTargetWindow");
					this.OnProductLogoTargetWindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLogoAltText", DbType="VarChar(255)")]
		public string ProductLogoAltText
		{
			get
			{
				return this._ProductLogoAltText;
			}
			set
			{
				if ((this._ProductLogoAltText != value))
				{
					this.OnProductLogoAltTextChanging(value);
					this.SendPropertyChanging();
					this._ProductLogoAltText = value;
					this.SendPropertyChanged("ProductLogoAltText");
					this.OnProductLogoAltTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginationPageTarget", DbType="VarChar(MAX)")]
		public string OriginationPageTarget
		{
			get
			{
				return this._OriginationPageTarget;
			}
			set
			{
				if ((this._OriginationPageTarget != value))
				{
					this.OnOriginationPageTargetChanging(value);
					this.SendPropertyChanging();
					this._OriginationPageTarget = value;
					this.SendPropertyChanged("OriginationPageTarget");
					this.OnOriginationPageTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEOMetaKeys", DbType="VarChar(MAX)")]
		public string SEOMetaKeys
		{
			get
			{
				return this._SEOMetaKeys;
			}
			set
			{
				if ((this._SEOMetaKeys != value))
				{
					this.OnSEOMetaKeysChanging(value);
					this.SendPropertyChanging();
					this._SEOMetaKeys = value;
					this.SendPropertyChanged("SEOMetaKeys");
					this.OnSEOMetaKeysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEOMetaDesc", DbType="VarChar(MAX)")]
		public string SEOMetaDesc
		{
			get
			{
				return this._SEOMetaDesc;
			}
			set
			{
				if ((this._SEOMetaDesc != value))
				{
					this.OnSEOMetaDescChanging(value);
					this.SendPropertyChanging();
					this._SEOMetaDesc = value;
					this.SendPropertyChanged("SEOMetaDesc");
					this.OnSEOMetaDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontSizePx", DbType="Int")]
		public System.Nullable<int> FontSizePx
		{
			get
			{
				return this._FontSizePx;
			}
			set
			{
				if ((this._FontSizePx != value))
				{
					this.OnFontSizePxChanging(value);
					this.SendPropertyChanging();
					this._FontSizePx = value;
					this.SendPropertyChanged("FontSizePx");
					this.OnFontSizePxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSearchLabelText", DbType="NVarChar(100)")]
		public string HomeSearchLabelText
		{
			get
			{
				return this._HomeSearchLabelText;
			}
			set
			{
				if ((this._HomeSearchLabelText != value))
				{
					this.OnHomeSearchLabelTextChanging(value);
					this.SendPropertyChanging();
					this._HomeSearchLabelText = value;
					this.SendPropertyChanged("HomeSearchLabelText");
					this.OnHomeSearchLabelTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Metro_iLink", Storage="_Client", ThisKey="Client_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Metro_iLinks.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Metro_iLinks.Add(this);
						this._Client_ID = value.ID;
					}
					else
					{
						this._Client_ID = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
